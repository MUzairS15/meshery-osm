{
 "properties": {
  "intent": {
   "default": "passive",
   "description": "Intent specifies the role of the MeshRootCertificate, can be active or passive",
   "enum": [
    "passive",
    "active"
   ],
   "type": "string"
  },
  "provider": {
   "description": "Certificate provider used by the mesh control plane",
   "oneOf": [
    {
     "required": [
      "certManager"
     ]
    },
    {
     "required": [
      "vault"
     ]
    },
    {
     "required": [
      "tresor"
     ]
    }
   ],
   "properties": {
    "certManager": {
     "description": "Cert-manager provider configuration",
     "properties": {
      "issuerGroup": {
       "description": "The group that the issuer belongs to",
       "type": "string"
      },
      "issuerKind": {
       "description": "The kind of issuer resource",
       "enum": [
        "ClusterIssuer",
        "Issuer"
       ],
       "type": "string"
      },
      "issuerName": {
       "description": "The name of the Issuer or ClusterIssuer resource",
       "type": "string"
      }
     },
     "required": [
      "issuerName",
      "issuerKind",
      "issuerGroup"
     ],
     "type": "object"
    },
    "tresor": {
     "description": "Tresor provider configuration",
     "properties": {
      "ca": {
       "description": "The root certificate used by Tresor",
       "properties": {
        "secretRef": {
         "description": "Reference to the kubernetes secret storing the root certificate",
         "properties": {
          "name": {
           "description": "Name of the kubernetes secret",
           "type": "string"
          },
          "namespace": {
           "description": "Namespace of the kubernetes secret",
           "type": "string"
          }
         },
         "required": [
          "name",
          "namespace"
         ],
         "type": "object"
        }
       },
       "required": [
        "secretRef"
       ],
       "type": "object"
      }
     },
     "required": [
      "ca"
     ],
     "type": "object"
    },
    "vault": {
     "description": "Vault provider configuration",
     "properties": {
      "host": {
       "description": "Host name for the Vault server",
       "type": "string"
      },
      "port": {
       "description": "Port for the Vault server",
       "maximum": 65535,
       "minimum": 1,
       "type": "integer"
      },
      "protocol": {
       "description": "Protocol for the Vault connection",
       "enum": [
        "http",
        "https"
       ],
       "type": "string"
      },
      "role": {
       "description": "Role created on Vault server for the mesh control plane",
       "type": "string"
      },
      "token": {
       "description": "Token used by the mesh control plane",
       "properties": {
        "secretKeyRef": {
         "description": "Reference to the kubernetes secret storing the vault token",
         "properties": {
          "key": {
           "description": "Kubernetes secret key",
           "type": "string"
          },
          "name": {
           "description": "Name of the kubernetes secret",
           "type": "string"
          },
          "namespace": {
           "description": "Namespace of the kubernetes secret",
           "type": "string"
          }
         },
         "required": [
          "name",
          "key",
          "namespace"
         ],
         "type": "object"
        }
       },
       "required": [
        "secretKeyRef"
       ],
       "type": "object"
      }
     },
     "required": [
      "host",
      "port",
      "role",
      "protocol",
      "token"
     ],
     "type": "object"
    }
   },
   "type": "object"
  },
  "spiffeEnabled": {
   "default": false,
   "description": "Adds a SPIFFE ID to the certificates, creating a SPIFFE compatible x509 SVID document",
   "type": "boolean"
  },
  "trustDomain": {
   "default": "cluster.local",
   "description": "Trust Domain to use in common name for certificates, e.g. \"example.com\"",
   "type": "string"
  }
 },
 "required": [
  "provider"
 ],
 "title": "Mesh Root Certificate",
 "type": "object"
}